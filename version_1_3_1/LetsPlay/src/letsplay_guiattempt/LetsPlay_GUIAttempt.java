/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package letsplay_guiattempt;

import java.awt.CardLayout;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedList;
import java.util.Random;
import java.util.concurrent.ExecutionException;
import javax.swing.SwingWorker;

/**
 *
 * @author Brooklyn
 */
public class LetsPlay_GUIAttempt extends javax.swing.JFrame {

    /**
     * Creates new form LetsPlayGUI
     */
    public LetsPlay_GUIAttempt() {
        initComponents();
        setCardLayouts();
        showPanel(LetsPlayEnum.SPLASH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        letsPlayPanel = new javax.swing.JPanel();
        splash = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        loginLabel = new javax.swing.JLabel();
        terminal = new javax.swing.JPanel();
        submitButton = new javax.swing.JToggleButton();
        terminalInputField = new javax.swing.JTextField();
        scrollPane = new javax.swing.JScrollPane();
        terminalOutputField = new javax.swing.JTextArea();
        login = new javax.swing.JPanel();
        loginScrollPanel = new javax.swing.JScrollPane();
        loginOutputArea = new javax.swing.JTextArea();
        loginButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        userNameField = new javax.swing.JTextField();
        guestButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        selectGame = new javax.swing.JPanel();
        mathIsFunButton = new javax.swing.JButton();
        playAgainPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        yesButton = new javax.swing.JButton();
        noButton = new javax.swing.JButton();
        playAgainMessage = new javax.swing.JLabel();
        mathIsFun = new javax.swing.JPanel();
        mathIsFunMode = new javax.swing.JPanel();
        additionButton = new javax.swing.JButton();
        subtractionButton = new javax.swing.JButton();
        divisionButton = new javax.swing.JButton();
        multiplicationButton = new javax.swing.JButton();
        mathIsFunDifficulty = new javax.swing.JPanel();
        easyButton = new javax.swing.JButton();
        mediumButton = new javax.swing.JButton();
        hardButton = new javax.swing.JButton();
        mathIsFunOptions = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        questionNumber = new javax.swing.JTextField();
        precisionSelection = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        decimalPlaces = new javax.swing.JTextField();
        invalidPrecisionNumber = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        optionsButton = new javax.swing.JButton();
        continueCorrect1 = new javax.swing.JLabel();
        invalidQuestionNumber = new javax.swing.JLabel();
        mathIsFunGame = new javax.swing.JPanel();
        game = new javax.swing.JPanel();
        questions = new javax.swing.JPanel();
        equationLine = new javax.swing.JSeparator();
        topNumber = new javax.swing.JLabel();
        bottomNumber = new javax.swing.JLabel();
        questionsPlayerAnswer = new javax.swing.JTextField();
        operatorField = new javax.swing.JLabel();
        questionsSubmit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        correctAnswer = new javax.swing.JPanel();
        correctImage = new javax.swing.JLabel();
        correctNext = new javax.swing.JButton();
        continueCorrect = new javax.swing.JLabel();
        incorrectAnswer = new javax.swing.JPanel();
        incorrectNext = new javax.swing.JButton();
        continueIncorrect = new javax.swing.JLabel();
        incorrectText = new javax.swing.JLabel();
        correctAnswerField = new javax.swing.JLabel();
        division = new javax.swing.JPanel();
        divisionQuestion = new javax.swing.JLayeredPane();
        dividerHorizontal = new javax.swing.JLabel();
        insideNumber = new javax.swing.JLabel();
        dividerVertical = new javax.swing.JLabel();
        outsideNumber = new javax.swing.JLabel();
        divisionPlayerAnswer = new javax.swing.JTextField();
        divisionSubmit = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setLayout(new java.awt.CardLayout());

        letsPlayPanel.setAutoscrolls(true);
        letsPlayPanel.setPreferredSize(new java.awt.Dimension(775, 525));
        letsPlayPanel.setLayout(new java.awt.CardLayout());

        splash.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/splashImage.png"))); // NOI18N

        startButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startButton.setText("START");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        loginLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        loginLabel.setText("Checking for registry...");

        javax.swing.GroupLayout splashLayout = new javax.swing.GroupLayout(splash);
        splash.setLayout(splashLayout);
        splashLayout.setHorizontalGroup(
            splashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, splashLayout.createSequentialGroup()
                .addGap(0, 172, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
            .addGroup(splashLayout.createSequentialGroup()
                .addGroup(splashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(splashLayout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(loginLabel))
                    .addGroup(splashLayout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        splashLayout.setVerticalGroup(
            splashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(splashLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(loginLabel)
                .addGap(18, 18, 18)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        letsPlayPanel.add(splash, "splash");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        terminalInputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terminalInputFieldActionPerformed(evt);
            }
        });

        terminalOutputField.setEditable(false);
        terminalOutputField.setColumns(20);
        terminalOutputField.setRows(5);
        scrollPane.setViewportView(terminalOutputField);

        javax.swing.GroupLayout terminalLayout = new javax.swing.GroupLayout(terminal);
        terminal.setLayout(terminalLayout);
        terminalLayout.setHorizontalGroup(
            terminalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(terminalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(terminalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addComponent(terminalInputField))
                .addContainerGap())
            .addGroup(terminalLayout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        terminalLayout.setVerticalGroup(
            terminalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(terminalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(terminalInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        letsPlayPanel.add(terminal, "terminalPanel");

        loginOutputArea.setEditable(false);
        loginOutputArea.setColumns(20);
        loginOutputArea.setRows(5);
        loginScrollPanel.setViewportView(loginOutputArea);

        loginButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        loginButton.setText("Next");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        passwordField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        passwordField.setText("jPasswordField1");
        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFieldFocusGained(evt);
            }
        });
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
        });

        userNameField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        userNameField.setText("username");
        userNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userNameFieldFocusGained(evt);
            }
        });

        guestButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        guestButton.setText("Guest");
        guestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Warning: Scores will not be saved in guest mode.");

        javax.swing.GroupLayout loginLayout = new javax.swing.GroupLayout(login);
        login.setLayout(loginLayout);
        loginLayout.setHorizontalGroup(
            loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginLayout.createSequentialGroup()
                        .addComponent(loginScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 122, Short.MAX_VALUE))
                    .addGroup(loginLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(loginLayout.createSequentialGroup()
                .addGap(317, 317, 317)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loginLayout.setVerticalGroup(
            loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(loginScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addGap(46, 46, 46)
                .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(guestButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        letsPlayPanel.add(login, "login");

        mathIsFunButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        mathIsFunButton.setText("Math Is Fun!");
        mathIsFunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mathIsFunButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selectGameLayout = new javax.swing.GroupLayout(selectGame);
        selectGame.setLayout(selectGameLayout);
        selectGameLayout.setHorizontalGroup(
            selectGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectGameLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(mathIsFunButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(543, Short.MAX_VALUE))
        );
        selectGameLayout.setVerticalGroup(
            selectGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectGameLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(mathIsFunButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(471, Short.MAX_VALUE))
        );

        letsPlayPanel.add(selectGame, "game");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Would you like to play again?");

        yesButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        yesButton.setText("YES");
        yesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesButtonActionPerformed(evt);
            }
        });

        noButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        noButton.setText("NO");
        noButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noButtonActionPerformed(evt);
            }
        });

        playAgainMessage.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        playAgainMessage.setText("<score message>");

        javax.swing.GroupLayout playAgainPanelLayout = new javax.swing.GroupLayout(playAgainPanel);
        playAgainPanel.setLayout(playAgainPanelLayout);
        playAgainPanelLayout.setHorizontalGroup(
            playAgainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playAgainPanelLayout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(yesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(noButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156))
            .addGroup(playAgainPanelLayout.createSequentialGroup()
                .addGroup(playAgainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playAgainPanelLayout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(playAgainPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(playAgainMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        playAgainPanelLayout.setVerticalGroup(
            playAgainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playAgainPanelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(playAgainMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(playAgainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(150, 150, 150))
        );

        letsPlayPanel.add(playAgainPanel, "playAgain");

        mainPanel.add(letsPlayPanel, "letsPlay");

        mathIsFun.setLayout(new java.awt.CardLayout());

        additionButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        additionButton.setText("ADDITION");
        additionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additionButtonActionPerformed(evt);
            }
        });

        subtractionButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subtractionButton.setText("SUBTRACTION");
        subtractionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractionButtonActionPerformed(evt);
            }
        });

        divisionButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        divisionButton.setText("DIVISION");
        divisionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionButtonActionPerformed(evt);
            }
        });

        multiplicationButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        multiplicationButton.setText("MULTIPLICATION");
        multiplicationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplicationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mathIsFunModeLayout = new javax.swing.GroupLayout(mathIsFunMode);
        mathIsFunMode.setLayout(mathIsFunModeLayout);
        mathIsFunModeLayout.setHorizontalGroup(
            mathIsFunModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mathIsFunModeLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(mathIsFunModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(additionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(multiplicationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addGroup(mathIsFunModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(subtractionButton, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                    .addComponent(divisionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(140, 140, 140))
        );
        mathIsFunModeLayout.setVerticalGroup(
            mathIsFunModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mathIsFunModeLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(mathIsFunModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(additionButton, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                    .addComponent(subtractionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                .addGroup(mathIsFunModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(divisionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multiplicationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(126, 126, 126))
        );

        mathIsFun.add(mathIsFunMode, "mode");

        easyButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        easyButton.setText("EASY");
        easyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                easyButtonActionPerformed(evt);
            }
        });

        mediumButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        mediumButton.setText("MEDIUM");
        mediumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mediumButtonActionPerformed(evt);
            }
        });

        hardButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        hardButton.setText("HARD");
        hardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mathIsFunDifficultyLayout = new javax.swing.GroupLayout(mathIsFunDifficulty);
        mathIsFunDifficulty.setLayout(mathIsFunDifficultyLayout);
        mathIsFunDifficultyLayout.setHorizontalGroup(
            mathIsFunDifficultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mathIsFunDifficultyLayout.createSequentialGroup()
                .addGap(293, 293, 293)
                .addGroup(mathIsFunDifficultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mediumButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(easyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(289, Short.MAX_VALUE))
        );
        mathIsFunDifficultyLayout.setVerticalGroup(
            mathIsFunDifficultyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mathIsFunDifficultyLayout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addComponent(easyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(mediumButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(hardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        mathIsFun.add(mathIsFunDifficulty, "difficulty");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("How many questions would you like?");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("How many decimal places?");

        invalidPrecisionNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        invalidPrecisionNumber.setText("Invalid number. Please enter a positive whole number (ex. '10' )");

        jLabel8.setText("Enter 0 for whole numbers.");

        jLabel9.setText("Whole numbers are rounded up.");

        javax.swing.GroupLayout precisionSelectionLayout = new javax.swing.GroupLayout(precisionSelection);
        precisionSelection.setLayout(precisionSelectionLayout);
        precisionSelectionLayout.setHorizontalGroup(
            precisionSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(precisionSelectionLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(decimalPlaces, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(precisionSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, precisionSelectionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(precisionSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, precisionSelectionLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, precisionSelectionLayout.createSequentialGroup()
                        .addComponent(invalidPrecisionNumber)
                        .addContainerGap())))
        );
        precisionSelectionLayout.setVerticalGroup(
            precisionSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(precisionSelectionLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(precisionSelectionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decimalPlaces, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(invalidPrecisionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        optionsButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        optionsButton.setText("NEXT");
        optionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsButtonActionPerformed(evt);
            }
        });

        continueCorrect1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        continueCorrect1.setText("Hit \"enter\" or click the button to continue");

        invalidQuestionNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        invalidQuestionNumber.setText("Invalid number. Please enter a positive whole number (ex. '10' )");

        javax.swing.GroupLayout mathIsFunOptionsLayout = new javax.swing.GroupLayout(mathIsFunOptions);
        mathIsFunOptions.setLayout(mathIsFunOptionsLayout);
        mathIsFunOptionsLayout.setHorizontalGroup(
            mathIsFunOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mathIsFunOptionsLayout.createSequentialGroup()
                .addGroup(mathIsFunOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mathIsFunOptionsLayout.createSequentialGroup()
                        .addContainerGap(309, Short.MAX_VALUE)
                        .addComponent(continueCorrect1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(mathIsFunOptionsLayout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addGroup(mathIsFunOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(precisionSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(invalidQuestionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(optionsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(mathIsFunOptionsLayout.createSequentialGroup()
                .addGap(320, 320, 320)
                .addComponent(questionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mathIsFunOptionsLayout.setVerticalGroup(
            mathIsFunOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mathIsFunOptionsLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel4)
                .addGap(49, 49, 49)
                .addComponent(questionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(invalidQuestionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mathIsFunOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mathIsFunOptionsLayout.createSequentialGroup()
                        .addComponent(precisionSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(96, 96, 96))
                    .addGroup(mathIsFunOptionsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 314, Short.MAX_VALUE)
                        .addGroup(mathIsFunOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(optionsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(continueCorrect1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );

        mathIsFun.add(mathIsFunOptions, "options");

        game.setLayout(new java.awt.CardLayout());

        questions.setBackground(new java.awt.Color(255, 255, 255));

        equationLine.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        topNumber.setFont(new java.awt.Font("Tahoma", 0, 50)); // NOI18N

        bottomNumber.setFont(new java.awt.Font("Tahoma", 0, 50)); // NOI18N

        questionsPlayerAnswer.setFont(new java.awt.Font("Tahoma", 0, 50)); // NOI18N

        operatorField.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        operatorField.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N

        questionsSubmit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        questionsSubmit.setText("SUBMIT");
        questionsSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionsSubmitActionPerformed(evt);
            }
        });

        jLabel6.setText("Click button or press \"enter\".");

        javax.swing.GroupLayout questionsLayout = new javax.swing.GroupLayout(questions);
        questions.setLayout(questionsLayout);
        questionsLayout.setHorizontalGroup(
            questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsLayout.createSequentialGroup()
                .addContainerGap(171, Short.MAX_VALUE)
                .addComponent(operatorField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(questionsPlayerAnswer)
                    .addComponent(topNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(equationLine)
                    .addComponent(bottomNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(questionsLayout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(questionsSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );
        questionsLayout.setVerticalGroup(
            questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsLayout.createSequentialGroup()
                .addComponent(topNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(questionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bottomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(operatorField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(equationLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(questionsPlayerAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, questionsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questionsSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        game.add(questions, "questionsPanel");

        correctImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/correct.png"))); // NOI18N

        correctNext.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        correctNext.setText("NEXT");
        correctNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correctNextActionPerformed(evt);
            }
        });

        continueCorrect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        continueCorrect.setText("Hit \"enter\" or click the button to continue");

        javax.swing.GroupLayout correctAnswerLayout = new javax.swing.GroupLayout(correctAnswer);
        correctAnswer.setLayout(correctAnswerLayout);
        correctAnswerLayout.setHorizontalGroup(
            correctAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(correctAnswerLayout.createSequentialGroup()
                .addContainerGap(251, Short.MAX_VALUE)
                .addComponent(continueCorrect, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(correctNext, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(correctAnswerLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(correctImage, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        correctAnswerLayout.setVerticalGroup(
            correctAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(correctAnswerLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(correctImage, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(correctAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(correctNext, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addComponent(continueCorrect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        game.add(correctAnswer, "correctAnswerPanel");

        incorrectNext.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        incorrectNext.setText("NEXT");
        incorrectNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incorrectNextActionPerformed(evt);
            }
        });

        continueIncorrect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        continueIncorrect.setText("Hit \"enter\" or click the button to continue");

        incorrectText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        incorrectText.setText("Sorry, the correct answer is:");

        correctAnswerField.setFont(new java.awt.Font("Tahoma", 0, 50)); // NOI18N

        javax.swing.GroupLayout incorrectAnswerLayout = new javax.swing.GroupLayout(incorrectAnswer);
        incorrectAnswer.setLayout(incorrectAnswerLayout);
        incorrectAnswerLayout.setHorizontalGroup(
            incorrectAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(incorrectAnswerLayout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(incorrectText, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(193, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, incorrectAnswerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(incorrectAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(correctAnswerField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, incorrectAnswerLayout.createSequentialGroup()
                        .addComponent(continueIncorrect, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(incorrectNext, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        incorrectAnswerLayout.setVerticalGroup(
            incorrectAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, incorrectAnswerLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(incorrectText, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(correctAnswerField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(incorrectAnswerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(incorrectNext, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(continueIncorrect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        game.add(incorrectAnswer, "incorrectAnswerPanel");

        divisionQuestion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        divisionQuestion.setLayer(dividerHorizontal, javax.swing.JLayeredPane.DEFAULT_LAYER, -1);
        divisionQuestion.setLayer(insideNumber, javax.swing.JLayeredPane.DEFAULT_LAYER, -1);
        divisionQuestion.setLayer(dividerVertical, javax.swing.JLayeredPane.DEFAULT_LAYER, 0);

        dividerHorizontal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dividerHorizontal.png"))); // NOI18N
        divisionQuestion.setLayer(dividerHorizontal, javax.swing.JLayeredPane.POPUP_LAYER);
        divisionQuestion.add(dividerHorizontal, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, -1, -1));

        insideNumber.setFont(new java.awt.Font("Tahoma", 0, 50)); // NOI18N
        divisionQuestion.add(insideNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 390, 120));

        dividerVertical.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dividerVertical.png"))); // NOI18N
        divisionQuestion.setLayer(dividerVertical, javax.swing.JLayeredPane.DRAG_LAYER);
        divisionQuestion.add(dividerVertical, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, -1, -1));

        outsideNumber.setFont(new java.awt.Font("Tahoma", 0, 50)); // NOI18N
        divisionQuestion.add(outsideNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 190, 140));

        divisionPlayerAnswer.setFont(new java.awt.Font("Tahoma", 0, 50)); // NOI18N
        divisionQuestion.add(divisionPlayerAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 390, 110));

        divisionSubmit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        divisionSubmit.setText("SUBMIT");
        divisionSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionSubmitActionPerformed(evt);
            }
        });
        divisionQuestion.add(divisionSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 390, -1, -1));

        jLabel7.setText("Click button or press \"enter\".");
        divisionQuestion.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 370, -1, -1));

        javax.swing.GroupLayout divisionLayout = new javax.swing.GroupLayout(division);
        division.setLayout(divisionLayout);
        divisionLayout.setHorizontalGroup(
            divisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(divisionLayout.createSequentialGroup()
                .addComponent(divisionQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        divisionLayout.setVerticalGroup(
            divisionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(divisionQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
        );

        game.add(division, "division");

        javax.swing.GroupLayout mathIsFunGameLayout = new javax.swing.GroupLayout(mathIsFunGame);
        mathIsFunGame.setLayout(mathIsFunGameLayout);
        mathIsFunGameLayout.setHorizontalGroup(
            mathIsFunGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mathIsFunGameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(game, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mathIsFunGameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(205, 205, 205))
        );
        mathIsFunGameLayout.setVerticalGroup(
            mathIsFunGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mathIsFunGameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(game, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mathIsFun.add(mathIsFunGame, "mathIsFunGamePanel");

        mainPanel.add(mathIsFun, "mathIsFun");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        userInput = terminalInputField.getText();
        terminalInputField.setText("");
    }//GEN-LAST:event_submitButtonActionPerformed

    private void terminalInputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terminalInputFieldActionPerformed
        submitButtonActionPerformed(evt);
    }//GEN-LAST:event_terminalInputFieldActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        loginLabel.setVisible(true);
        (new CheckRegistry()).execute();
    }//GEN-LAST:event_startButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        login();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void passwordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFieldFocusGained
        passwordField.selectAll();
    }//GEN-LAST:event_passwordFieldFocusGained

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        int key = evt.getKeyCode();
        if (key == java.awt.event.KeyEvent.VK_ENTER) {
            login();
        }
    }//GEN-LAST:event_passwordFieldKeyPressed

    private void userNameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userNameFieldFocusGained
        userNameField.selectAll();
    }//GEN-LAST:event_userNameFieldFocusGained

    private void guestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestButtonActionPerformed
        startGuestMode();
    }//GEN-LAST:event_guestButtonActionPerformed

    private void mathIsFunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mathIsFunButtonActionPerformed
        showPanel(MathIsFunEnum.MODE);
    }//GEN-LAST:event_mathIsFunButtonActionPerformed

    private void yesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesButtonActionPerformed
        showPanel(LetsPlayEnum.GAME);
        mathIsFun.setVisible(true);
        letsPlayPanel.setVisible(false);
    }//GEN-LAST:event_yesButtonActionPerformed

    private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
        dispose();
        if(!firstName.equals("Guest")){
            saveGameData();
        }
    }//GEN-LAST:event_noButtonActionPerformed

    private void additionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additionButtonActionPerformed
        showPanel(MathIsFunEnum.DIFFICULTY);
        mode = ("ADDITION");
    }//GEN-LAST:event_additionButtonActionPerformed

    private void subtractionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractionButtonActionPerformed
        showPanel(MathIsFunEnum.DIFFICULTY);
        mode = ("SUBTRACTION");
    }//GEN-LAST:event_subtractionButtonActionPerformed

    private void divisionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionButtonActionPerformed
        showPanel(MathIsFunEnum.DIFFICULTY);
        mode = ("DIVISION");
    }//GEN-LAST:event_divisionButtonActionPerformed

    private void multiplicationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplicationButtonActionPerformed
        showPanel(MathIsFunEnum.DIFFICULTY);
        mode = ("MULTIPLICATION");
    }//GEN-LAST:event_multiplicationButtonActionPerformed

    private void easyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_easyButtonActionPerformed
        difficulty = ("EASY");
        showPanel(MathIsFunEnum.OPTIONS);
    }//GEN-LAST:event_easyButtonActionPerformed

    private void mediumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediumButtonActionPerformed
        difficulty = ("MEDIUM");
        showPanel(MathIsFunEnum.OPTIONS);
    }//GEN-LAST:event_mediumButtonActionPerformed

    private void hardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardButtonActionPerformed
        difficulty = ("HARD");
        showPanel(MathIsFunEnum.OPTIONS);
    }//GEN-LAST:event_hardButtonActionPerformed

    private void optionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsButtonActionPerformed
        Boolean precisionSet = false;

        if(mode.equals("DIVISION")){
            Boolean isValid = setPrecision(decimalPlaces.getText());
            if(!isValid){
                invalidPrecisionNumber.setVisible(true);
            }else{
                precisionSet = true;
            }
        }
        Boolean isValid = checkQuestionNumber(questionNumber.getText());
        if(!isValid){
            invalidQuestionNumber.setVisible(true);
        }else if((isValid && precisionSet == true) | (isValid && !mode.equals("DIVISION"))){
            (new GameSetup()).execute();
        }
    }//GEN-LAST:event_optionsButtonActionPerformed

    private void questionsSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionsSubmitActionPerformed
        int input = Integer.parseInt(questionsPlayerAnswer.getText());
        playerAnswer = getBigDecimal(input);
        (new CheckAnswer()).execute();
    }//GEN-LAST:event_questionsSubmitActionPerformed

    private void correctNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correctNextActionPerformed
        nextQuestion();
    }//GEN-LAST:event_correctNextActionPerformed

    private void incorrectNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incorrectNextActionPerformed
        nextQuestion();
    }//GEN-LAST:event_incorrectNextActionPerformed

    private void divisionSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionSubmitActionPerformed
        Double input = Double.parseDouble(divisionPlayerAnswer.getText());
        playerAnswer = getBigDecimal(input);
        (new CheckAnswer()).execute();
    }//GEN-LAST:event_divisionSubmitActionPerformed
    private void startGuestMode(){
        firstName = "Guest";
        showPanel(LetsPlayEnum.GAME);
        mathIsFun.setVisible(true);
        letsPlayPanel.setVisible(false);
    }
    private class CheckRegistry extends SwingWorker<Void, Void>{
        @Override
        protected Void doInBackground(){
            registryAvailable = Utilities.findRegistry();
            if(registryAvailable == false){
                int answer = Utilities.showOptionDialog("Error: Registry.txt is missing. Game information will not be saved. Continue in guest mode?");
                if(answer == 1){
                    Utilities.showErrorDialog("Fatal Error: Registry.txt is missing.");
                }else{
                    startGuestMode();
                }
            }else{
                setLoginIO();
                showPanel(LetsPlayEnum.LOGIN);
            }
            return null;
        }
    }
    class GameSetup extends SwingWorker<Void, Void>{
        @Override
        protected Void doInBackground(){
            //get numbers for the questions
            (new GetNumbers()).execute();
            //set up the progress bar
            progressBar.setStringPainted(true);
            progressBar.setValue(0);
            progressBar.setMaximum(totalQuestions);
            //set up the operator field
            if(!mode.equals("DIVISION")){
                operatorField.setIcon(new javax.swing.ImageIcon(getClass().getResource(operatorImg())));
            }
            (new DisplayEquation()).execute();
            return null;
        }
    }
    class DisplayEquation extends SwingWorker<Void, Void>{
        @Override
        protected Void doInBackground(){
            currentQuestion++;
            //get the equation numbers
            boolean noNumber;
            do{
                Integer test = NUMBERS.peekFirst();
                if(test != null){
                    first = NUMBERS.pollFirst();
                    noNumber = false;
                }else{
                    noNumber = true;
                }
            }while(noNumber);
            do{
                Integer test = NUMBERS.peekFirst();
                if(test != null){
                    second = NUMBERS.pollFirst();
                    noNumber = false;
                }else{
                    noNumber = true;
                }
            }while(noNumber);
            //place the numbers on the panels
            if(mode.equals("DIVISION")){
                insideNumber.setText(""+first);
                outsideNumber.setText(""+second);
                showPanel(MathIsFunEnum.DIVISION);
            }else{
                topNumber.setText(""+first);
                bottomNumber.setText(""+second);
                showPanel(MathIsFunEnum.QUESTIONS);
            }
            (computeAnswer = new GetAnswer()).execute();
            return null;
        }
    }
    private class GetAnswer extends SwingWorker<BigDecimal, BigDecimal>{
        @Override
        protected BigDecimal doInBackground(){
            BigDecimal CorrectAnswer = getAnswer(first, second);
            return CorrectAnswer;
        }
    }
    private class GetNumbers extends SwingWorker<Void, Void>{
        @Override
        protected Void doInBackground(){
            for(int i = 0; i < totalQuestions; i++){
                int[] pair = getNumbers();
                Integer first = pair[0];
                Integer second = pair[1];
                NUMBERS.offer(first);
                NUMBERS.offer(second);
            }
            return null;
        }
    }
    private class CheckAnswer extends SwingWorker<Void, Void>{
        @Override
        protected Void doInBackground(){
            try{
                computeAnswer.get();
            }catch(InterruptedException | ExecutionException e){
                String message = "Unable to compute answer. First number: "+first+". Second Number : "+second+". Attempted answer: "+answer;
                Utilities.showErrorDialog(message, e);
            }
            if(playerAnswer.compareTo(answer) == 0){
                showPanel(MathIsFunEnum.CORRECT);
            }else{
                correctAnswerField.setText(""+answer+":"+doubleAnswer+":"+first+":"+second);
                showPanel(MathIsFunEnum.INCORRECT);
            }
            return null;
        }
    }
    private void nextQuestion(){
        if(currentQuestion < totalQuestions){
            (new DisplayEquation()).execute();
        }else{
            setScorePercent();
            addScore(percent);
            addGame(getGameInformation());
            playAgainMessage.setText("You got "+score+" out of "+totalQuestions+" questions right, "+firstName+".");
            currentQuestion = 0;
            totalQuestions = -1;
            precision = -1;
            score = 0;
            showPanel(LetsPlayEnum.PLAYAGAIN);
            mathIsFun.setVisible(false);
            playAgainPanel.setVisible(true);
        }
    }
    private Boolean checkQuestionNumber(String questions){
        Boolean isValid;
        int input = Integer.parseInt(questions);
           if(input > 0 && (input%1 == 0)){
               totalQuestions = input;
               currentQuestion = 0;
               isValid = true;
           }else{
               isValid = false;
           }
        return isValid;
    }
    private String getGameInformation(){
        String message = "MATH: "+mode+" ("+difficulty+")\tTotal questions: "+totalQuestions;
        return message;
    }
    private void setScorePercent(){
        Double tempPercent = new Double(score/totalQuestions*100);
        percent = new BigDecimal(tempPercent).setScale(0, RoundingMode.HALF_UP);
    }
    private String operatorImg(){
        String image = "";
        switch(mode){
                case "ADDITION":
                    image = ("/images/add.png");
                    break;
                case "SUBTRACTION":
                    image = ("/images/subtract.png");
                    break;
                case "MULTIPLICATION":
                    image = ("/images/multiply.png");
                    break;
                default:
                    assert false;
        }
        return image;
    }
    private int[] getNumbers(){
        Random generator = new Random();
        
        switch(difficulty){
            case "EASY":
                first = generator.nextInt(20)+1;
                second = generator.nextInt(10)+1;
                break;
            case "MEDIUM":
                first = generator.nextInt(50)+51;
                second = generator.nextInt(50)+11;
                break;
            case "HARD":
                first = generator.nextInt(100)+51;
                second = generator.nextInt(100)+11;
                break;
            default:
                assert false;
        }
        int[] pair = {first, second};
        return pair;
    }
    private BigDecimal getAnswer(int first, int second){
        Double tempAnswer = new Double(0);
        Double tempFirst = new Double(first);
        Double tempSecond = new Double(second);
        
        switch(mode){
            case "ADDITION":
                tempAnswer = new Double(tempFirst + tempSecond);
                break;
            case "SUBTRACTION":
                tempAnswer = new Double(tempFirst - tempSecond);
                break;
            case "MULTIPLICATION":
                tempAnswer = new Double(tempFirst * tempSecond);
                break;
            case "DIVISION":
                tempAnswer = new Double(tempFirst/tempSecond);
                break;
            default: 
                assert false;
        }
        doubleAnswer = tempAnswer;
        answer = getBigDecimal(tempAnswer);
        return answer;
    }
    private String getScoreMessage(){
        String message;
        if(percent.equals(100)){
            message = "Perfect Score! 100%";
        }else if((percent.compareTo(new BigDecimal(90))==1) | percent.equals(90)){
            message = "Great Job! "+percent+"%";
        }else if((percent.compareTo(new BigDecimal(75))==1) | percent.equals(75)){
            message = "Good Job! "+percent+"%";
        }else if((percent.compareTo(new BigDecimal(50))==1) | percent.equals(50)){
            message = "Remember to take your time: "+percent+"%";
        }else{
            message = "Try a lower difficulty or ask for help: "+percent+"%";
        }
        return message;
    }
    private Boolean setPrecision(String precision){
        Boolean isValid;
        int input = Integer.parseInt(precision);
           if(input == 0 | (input > 0 && (input%1 == 0))){
               this.precision = input;
               isValid = true;
           }else{
               isValid = false;
           }
        return isValid;
    }
    private BigDecimal getBigDecimal(int num){
        BigDecimal converted;
        if(mode.equals("DIVISION")){
            converted = new BigDecimal(num).setScale(precision, RoundingMode.HALF_UP);
        }else{
            converted = new BigDecimal(num);
        }
        return converted;
    }
    private BigDecimal getBigDecimal(double num){
        BigDecimal converted;
        if(mode.equals("DIVISION")){
            converted = new BigDecimal(num).setScale(precision, RoundingMode.HALF_UP);
        }else{
            converted = new BigDecimal(num);
        }
        return converted;
    }
    private void login(){
        System.out.println("Verifying...");
        Utilities.verifyUserName(userNameField.getText());
        Utilities.verifyPassword(passwordField.getPassword());
        Boolean isValid = Utilities.login();
        if(isValid){
            firstName = Utilities.getFirstName();
            showPanel(LetsPlayEnum.GAME);
            mathIsFun.setVisible(true);
            letsPlayPanel.setVisible(false);
        }else{
            System.out.println("Incorrect username or password. Try again.");
            userNameField.setText("Username");
            passwordField.setText("password");
        }
    }
    private void setTerminalIO(){
        printStream = new PrintStream(new Utilities().new CustomOutputStream(terminalOutputField));
        System.setOut(printStream);
        System.setErr(printStream);
    }
    private void setLoginIO(){
        printStream = new PrintStream(new Utilities().new CustomOutputStream(loginOutputArea));
        System.setOut(printStream);
        System.setErr(printStream);
        System.out.println("Please enter your username and password.");
    }
    private void saveGameData(){
        Date date = new Date();
        DateFormat dateFormat = DateFormat.getDateInstance();
        String today = dateFormat.format(date);
        today = String.format("%s%n", today);
        Path studentFile = Utilities.getStudentFile();
        try(BufferedWriter bw = Files.newBufferedWriter(studentFile, Charset.defaultCharset(), StandardOpenOption.WRITE, StandardOpenOption.APPEND)){
            bw.write(today);
            for(int i = 0; i<SCORES.size(); i++){
                String message = String.format("%s\t%s%%%n", GAMES.get(i), SCORES.get(i));
                bw.write(message);
            }
        }catch(IOException e){
            Utilities.showErrorDialog("Fatal error: Unable to save student data to file.", e);
        }
    }
    public static String getUserInput(){
        String input;
        while(userInput == null){
            synchronized(LOCK){
                try{
                    LOCK.wait(1000);
                }catch(InterruptedException e){
                    e.printStackTrace();
                }
            }
        }
        input = userInput;
        userInput = null;
        return input;
    }
    private void setCardLayouts(){
        mainLayoutManager = (CardLayout) mainPanel.getLayout();
        letsPlayLayoutManager = (CardLayout) letsPlayPanel.getLayout();
        gameLayoutManager = (CardLayout) game.getLayout();
        mathIsFunLayoutManager = (CardLayout) mathIsFun.getLayout();
    }
    protected enum LetsPlayEnum{
        TERMINAL,
        LOGIN,
        SPLASH,
        GAME,
        PLAYAGAIN
    }
    protected enum MathIsFunEnum{
        MODE,
        DIFFICULTY,
        OPTIONS,
        QUESTIONS,
        CORRECT,
        INCORRECT,
        DIVISION
    }
    protected final void showPanel(MathIsFunEnum panel){
        switch(panel){
            case MODE:
                mainLayoutManager.show(mainPanel, "mathIsFun");
                mathIsFunLayoutManager.show(mathIsFun, "mode");
                break;
            case DIFFICULTY:
                mainLayoutManager.show(mainPanel, "mathIsFun");
                mathIsFunLayoutManager.show(mathIsFun, "difficulty");
                break;
            case OPTIONS:
                invalidPrecisionNumber.setVisible(false);
                invalidQuestionNumber.setVisible(false);
                if(mode.equals("DIVISION")){
                    precisionSelection.setVisible(true);
                }else{
                    precisionSelection.setVisible(false);
                }
                mainLayoutManager.show(mainPanel, "mathIsFun");
                mathIsFunLayoutManager.show(mathIsFun, "options");
                decimalPlaces.setText("");
                questionNumber.setText("");
                questionNumber.requestFocusInWindow();
                mathIsFunOptions.getRootPane().setDefaultButton(optionsButton);
                break;
            case QUESTIONS:
                mainLayoutManager.show(mainPanel, "mathIsFun");
                mathIsFunLayoutManager.show(mathIsFun, "mathIsFunGamePanel");
                gameLayoutManager.show(game, "questionsPanel");
                questionsPlayerAnswer.setText("");
                questionsPlayerAnswer.requestFocusInWindow();
                questions.getRootPane().setDefaultButton(questionsSubmit);
                break;
            case CORRECT:
                progressBar.setValue(currentQuestion);
                score++;
            
                mainLayoutManager.show(mainPanel, "mathIsFun");
                mathIsFunLayoutManager.show(mathIsFun, "mathIsFunGamePanel");
                gameLayoutManager.show(game, "correctAnswerPanel");
                correctAnswer.getRootPane().setDefaultButton(correctNext);
                break;
            case INCORRECT:
                progressBar.setValue(currentQuestion);
            
                mainLayoutManager.show(mainPanel, "mathIsFun");
                mathIsFunLayoutManager.show(mathIsFun, "mathIsFunGamePanel");
                gameLayoutManager.show(game, "incorrectAnswerPanel");
                incorrectAnswer.getRootPane().setDefaultButton(incorrectNext);
                break;
            case DIVISION:
                mainLayoutManager.show(mainPanel, "mathIsFun");
                mathIsFunLayoutManager.show(mathIsFun, "mathIsFunGamePanel");
                gameLayoutManager.show(game, "division");
                divisionPlayerAnswer.setText("");
                divisionPlayerAnswer.requestFocusInWindow();
                division.getRootPane().setDefaultButton(divisionSubmit);
                break;
        }
    }
    protected final void showPanel(LetsPlayEnum panel){
        switch(panel){
            case TERMINAL:
                setTerminalIO();
                mainLayoutManager.show(mainPanel, "letsPlay");
                letsPlayLayoutManager.show(letsPlayPanel, "terminalPanel");
                break;
            case LOGIN:
                mainLayoutManager.show(mainPanel, "letsPlay");
                letsPlayLayoutManager.show(letsPlayPanel, "login");
                break;
            case SPLASH:
                loginLabel.setVisible(false);
                mainLayoutManager.show(mainPanel, "letsPlay");
                letsPlayLayoutManager.show(letsPlayPanel, "splash");
                break;
            case GAME:
                //letsPlayLayoutManager.show(letsPlayPanel, "game");
                showPanel(MathIsFunEnum.MODE);
                letsPlayPanel.setVisible(false);
                mathIsFun.setVisible(true);
            case PLAYAGAIN:
                mainLayoutManager.show(mainPanel, "letsPlay");
                letsPlayLayoutManager.show(letsPlayPanel, "playAgain");
        }
    }
    public static void addScore(BigDecimal percent){
        SCORES.add(percent);
    }
    public static void addGame(String game){
        GAMES.add(game);
    }
    
    
    //end of game variables declaration
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LetsPlay_GUIAttempt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LetsPlay_GUIAttempt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LetsPlay_GUIAttempt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LetsPlay_GUIAttempt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LetsPlay_GUIAttempt().setVisible(true);
            }
        });
    }
    //letsplay variables
    private PrintStream printStream;
    private static String userInput;
    public static final String LOCK = "lock";
    private static String firstName;
    private Boolean registryAvailable;
    static CardLayout mainLayoutManager;
    static CardLayout letsPlayLayoutManager;
    static CardLayout mathIsFunLayoutManager;
    static CardLayout gameLayoutManager;
    private static final ArrayList<BigDecimal> SCORES = new ArrayList<>();
    private static final ArrayList<String> GAMES = new ArrayList<>();
    //game variables
    private final LinkedList<Integer> NUMBERS = new LinkedList<>();
    private BigDecimal playerAnswer;
    private BigDecimal answer;
    private Double doubleAnswer;
    private GetAnswer computeAnswer;
    private int score;
    private int currentQuestion;
    private int totalQuestions;
    private int precision;
    private int first;
    private int second;
    private String mode;
    private String difficulty;
    private BigDecimal percent;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton additionButton;
    private javax.swing.JLabel bottomNumber;
    private javax.swing.JLabel continueCorrect;
    protected javax.swing.JLabel continueCorrect1;
    private javax.swing.JLabel continueIncorrect;
    private javax.swing.JPanel correctAnswer;
    private javax.swing.JLabel correctAnswerField;
    private javax.swing.JLabel correctImage;
    private javax.swing.JButton correctNext;
    protected javax.swing.JTextField decimalPlaces;
    private javax.swing.JLabel dividerHorizontal;
    private javax.swing.JLabel dividerVertical;
    private javax.swing.JPanel division;
    protected javax.swing.JButton divisionButton;
    private javax.swing.JTextField divisionPlayerAnswer;
    private javax.swing.JLayeredPane divisionQuestion;
    private javax.swing.JButton divisionSubmit;
    protected javax.swing.JButton easyButton;
    private javax.swing.JSeparator equationLine;
    protected javax.swing.JPanel game;
    private javax.swing.JButton guestButton;
    protected javax.swing.JButton hardButton;
    private javax.swing.JPanel incorrectAnswer;
    private javax.swing.JButton incorrectNext;
    private javax.swing.JLabel incorrectText;
    private javax.swing.JLabel insideNumber;
    protected javax.swing.JLabel invalidPrecisionNumber;
    protected javax.swing.JLabel invalidQuestionNumber;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    protected javax.swing.JLabel jLabel4;
    protected javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel letsPlayPanel;
    private javax.swing.JPanel login;
    private javax.swing.JButton loginButton;
    protected javax.swing.JLabel loginLabel;
    private javax.swing.JTextArea loginOutputArea;
    private javax.swing.JScrollPane loginScrollPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel mathIsFun;
    private javax.swing.JButton mathIsFunButton;
    protected javax.swing.JPanel mathIsFunDifficulty;
    protected javax.swing.JPanel mathIsFunGame;
    protected javax.swing.JPanel mathIsFunMode;
    protected javax.swing.JPanel mathIsFunOptions;
    protected javax.swing.JButton mediumButton;
    protected javax.swing.JButton multiplicationButton;
    private javax.swing.JButton noButton;
    private javax.swing.JLabel operatorField;
    protected javax.swing.JButton optionsButton;
    private javax.swing.JLabel outsideNumber;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel playAgainMessage;
    private javax.swing.JPanel playAgainPanel;
    protected javax.swing.JPanel precisionSelection;
    protected javax.swing.JProgressBar progressBar;
    protected javax.swing.JTextField questionNumber;
    private javax.swing.JPanel questions;
    private javax.swing.JTextField questionsPlayerAnswer;
    private javax.swing.JButton questionsSubmit;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JPanel selectGame;
    private javax.swing.JPanel splash;
    private javax.swing.JButton startButton;
    private javax.swing.JToggleButton submitButton;
    protected javax.swing.JButton subtractionButton;
    private javax.swing.JPanel terminal;
    private javax.swing.JTextField terminalInputField;
    private javax.swing.JTextArea terminalOutputField;
    private javax.swing.JLabel topNumber;
    private javax.swing.JTextField userNameField;
    private javax.swing.JButton yesButton;
    // End of variables declaration//GEN-END:variables
}
