/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package letsPlay;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.math.BigDecimal;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import javax.swing.SwingWorker;
import java.util.ArrayList;
import java.util.Date;
import java.text.DateFormat;

/**
 *
 * @author Brooklyn
 */
public class LetsPlayGUI extends javax.swing.JFrame {

    /**
     * Creates new form LetsPlayGUI
     */
    public LetsPlayGUI() {
        super("Let's Play!");
        initComponents();
        printStream = new PrintStream(new Utilities().new CustomOutputStream(outputTextField));
        System.setOut(printStream);
        System.setErr(printStream);
        //start swingworker thread
        (gameLogic = new GameLogic()).execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextField = new javax.swing.JTextArea();
        inputTextField = new javax.swing.JTextField();
        submitButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        outputTextField.setEditable(false);
        outputTextField.setColumns(20);
        outputTextField.setRows(5);
        jScrollPane1.setViewportView(outputTextField);

        inputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTextFieldActionPerformed(evt);
            }
        });

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputTextField)
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(submitButton)
                .addContainerGap(168, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        userInput = inputTextField.getText();
        inputTextField.setText("");
    }//GEN-LAST:event_submitButtonActionPerformed

    private void inputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTextFieldActionPerformed
        // TODO add your handling code here:
        submitButtonActionPerformed(evt);
    }//GEN-LAST:event_inputTextFieldActionPerformed

    private class GameLogic extends SwingWorker<Integer, String>{
        @Override
        protected Integer doInBackground(){
            try{
                studentInfo = Utilities.login();
                LetsPlay.selectGame(studentInfo[0]);
                saveGameData();
            }catch(RuntimeException e){
                System.exit(1);
            }
            dispose();
            return 1;
        }
    }
    private void saveGameData() throws RuntimeException{
        ArrayList<BigDecimal> scores = LetsPlay.getScores();
        ArrayList<String> games = LetsPlay.getGames();
        Date date = new Date();
        DateFormat dateFormat = DateFormat.getDateInstance();
        String today = dateFormat.format(date);
        today = String.format("%s%n", today);
        Path studentFile = Utilities.getStudentFile(studentInfo[1], studentInfo[0]);
        try(BufferedWriter bw = Files.newBufferedWriter(studentFile, Charset.defaultCharset(), StandardOpenOption.WRITE, StandardOpenOption.APPEND)){
            bw.write(today);
            for(int i = 0; i<scores.size(); i++){
                String message = String.format("%s\t%s%%%n", games.get(i), scores.get(i));
                bw.write(message);
            }
        }catch(IOException e){
            Utilities.showErrorDialog("Fatal error: Unable to save student data to file.", e);
        }
    }
    public static String getUserInput(){
        String input;
        while(userInput == null){
            synchronized(LOCK){
                try{
                    LOCK.wait(1000);
                }catch(InterruptedException e){
                    e.printStackTrace();
                }
            }
        }
        input = userInput;
        userInput = null;
        return input;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LetsPlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LetsPlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LetsPlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LetsPlayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LetsPlayGUI().setVisible(true);
            }
        });
        
    }
    
    private PrintStream printStream;
    private GameLogic gameLogic;
    private static String userInput;
    private static final String LOCK = "lock";
    private static String[] studentInfo; //first, last, user, pass
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField inputTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea outputTextField;
    private javax.swing.JToggleButton submitButton;
    // End of variables declaration//GEN-END:variables
}
